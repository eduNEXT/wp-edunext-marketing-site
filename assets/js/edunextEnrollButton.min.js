'use strict';

var ENEXT = ENEXT || {};

ENEXT.registration = (function($){

  var buttonAnchorClass = ".enroll-button-js";
  var openedxDomain = "http://cursos.wordpress.test:8000";
  var enrollmentApiLocation = openedxDomain + "/api/enrollment/v1/";

  var template = function(url, btnLabel,) {
    var containerClasses = "vc_btn3-container vc_btn3-left";
    var buttonClasses = "vc_general vc_btn3 vc_btn3-size-lg vc_btn3-shape-rounded vc_btn3-style-modern";

    return '' +
      '<div class="' + containerClasses + '">' +
      '<a class="' + buttonClasses + '" href="' + url + '">' + btnLabel + '</a>' +
      '</div>' +
      '';
  }

  var renderInvitationOnly = function($anchor) {
    $anchor.html(template("#", "Este curso requiere una invitación"));
    $anchor.find('a').addClass("vc_btn3-color-info");
  }

  var renderGoToCourse = function($anchor, courseID) {
    var url = openedxDomain + "/courses/" + courseID + "info";
    $anchor.html(template(url, "Ver el curso"));
    $anchor.find('a').addClass("vc_btn3-color-success");
  }

  var renderCourseHasNotStarted = function($anchor) {
    var url = openedxDomain + "/dashboard/";
    $anchor.html(template(url, "Este curso no ha comenzado"));
    $anchor.find('a').addClass("vc_btn3-color-success");
    // TODO: add a message with the course start date
  }

  var renderEnroll = function($anchor, courseID) {
    var queryStr = "course_id=" + courseID + "&enrollment_action=enroll";
    var url = openedxDomain + "/register?" + queryStr;
    $anchor.html(template(url, "Regístrate"));
    $anchor.find('a').addClass("vc_btn3-color-success");
  }

  var renderEnrollmentClosed = function($anchor) {
    $anchor.html(template("#", "El registro para el curso ha terminado"));
    $anchor.find('a').addClass("vc_btn3-color-purple");
  }

  var getCourseData = function(enrollmentApiLocation, courseID, enrollmentData, $anchor) {
    var urlCourse = enrollmentApiLocation + 'course/' + courseID + '?include_expired=1';

    var courseXhr = $.ajax({
      url: urlCourse,
      type: "GET",
      dataType: 'json',
      xhrFields: {
           withCredentials: true
      }
    })
    .done(function(data) {
      var courseData = data;

      var amIEnrolled = Boolean($.map(enrollmentData, function(row) {
        if (row["course_details"]["course_id"] == courseID) {
          return true;
        }
      }).length);

      var hasCourseStarted = (new Date(Date.parse(courseData.course_start))) <= Date.now() || false;

      var isInvitationOnly = courseData.invite_only || false;

      var isRegistrationOpen = ( new Date(Date.parse(courseData.enrollment_start) || Date.now()) <= Date.now() )
                            && ( Date.now() <= new Date(Date.parse(courseData.enrollment_end) || Date.now()) );

      // Big decisition tree
      if (amIEnrolled) {
        if (hasCourseStarted) {
          renderGoToCourse($anchor, courseID)
        }
        else {
          renderCourseHasNotStarted($anchor);
        }
      }
      else {
        if (isInvitationOnly) {
          renderInvitationOnly($anchor);
        }
        else {
          if (isRegistrationOpen) {
            renderEnroll($anchor, courseID);
          }
          else {
            renderEnrollmentClosed($anchor);
          }
        }
      }
    });
  }

  var handleClick = function(event) {};

  var init = function() {
    // find the enrollment information for the user
    var urlEnrollments = enrollmentApiLocation + 'enrollment';

    // Potencially global vars
    var enrollmentData;

    var enrollmentsXhr = $.ajax({
      url: urlEnrollments,
      type: "GET",
      dataType: 'json',
      xhrFields: {
           withCredentials: true
      }
    })
    .done(function(data) {
      enrollmentData = data;
    })
    .fail(function() {
      // Do Nothing for now
      // renderError
      // course_is is wrong
    })
    .always(function() {

      $(buttonAnchorClass).each(function(index, elem) {
        var $anchor = $(elem);
        var courseID = $anchor.data("course-id");

        $anchor.on('click', handleClick);
        getCourseData(enrollmentApiLocation, courseID, enrollmentData, $anchor)
      });
    });
  }

  return {
    init: init
  }

})(jQuery);
ENEXT.registration.init();

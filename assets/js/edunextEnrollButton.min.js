'use strict';
window.ENEXT = window.ENEXT || {};
ENEXT.registration = (function($) {

    var BUTTONANCHORCLASS = '.ednx-enroll-button-js';

    var template = function(url, btnLabel, containerClasses, buttonClasses) {
        return '' +
            '<div class="' + containerClasses + '">' +
            '<a class="' + buttonClasses + '" href="' + url + '">' + btnLabel + '</a>' +
            '</div>' +
            '';
    }

    var renderActionBtn = function(action, $anchor, url) {
        var settings = window[$anchor.data('settings')];
        var containerClasses = settings['container_class_' + action] || settings.container_class_generic;
        var buttonClasses = settings['button_class_' + action] || settings.button_class_generic;
        var colorClass = settings['color_class_' + action] || settings.color_class_generic;
        var label = settings['label_' + action];
        var hide = settings['hide_if'];
        url = url || '#';
        if (hide === 'logged in' && ENEXT.amILoggedIn() || hide === 'not logged in' && !ENEXT.amILoggedIn()) {
            $anchor.remove();
            return;
        }
        $anchor.show();
        $anchor.html(template(url, label, containerClasses, buttonClasses));
        $anchor.find('a').addClass(colorClass);
    }

    var renderButtons = function(courseData, enrollmentData, $anchor) {
        var amIEnrolled = ENEXT.amIEnrolledIn(enrollmentData, courseData.course_id);
        var hasCourseStarted = (new Date(Date.parse(courseData.course_start))) <= Date.now();
        var isInvitationOnly = Boolean(courseData.invite_only);
        var isRegistrationOpen = ENEXT.isCourseRegistrationOpen(courseData);
        var userEnrollmentUrl = ENEXT_SRV.user_enrollment_url.replace('%course_id%', courseData.course_id);
        var courseHasNotStartedUrl = ENEXT_SRV.course_has_not_started_url;

        // Big decisition tree
        if (amIEnrolled) {
            if (hasCourseStarted) {
                renderActionBtn('go_to_course', $anchor, ENEXT.OPENEDX_DOMAIN + '/courses/' + courseData.course_id + '/info');
            } else {
                renderActionBtn('course_has_not_started', $anchor, ENEXT.OPENEDX_DOMAIN + courseHasNotStartedUrl);
            }
        } else if (isInvitationOnly) {
            renderActionBtn('invitation_only', $anchor);
        } else if (isRegistrationOpen) {
            renderActionBtn('enroll', $anchor, ENEXT.OPENEDX_DOMAIN + userEnrollmentUrl);
        } else {
            renderActionBtn('enrollment_closed', $anchor);
        }
    }

    var init = function() {
        ENEXT.getEnrollmentInfo().always(function(data) {
            // data.status only exists on error (e.g. its a jqXHR object)
            var enrollmentData = data.status ? [] : data;
            $(BUTTONANCHORCLASS).each(function(index, elem) {
                var $anchor = $(elem);
                var courseID = $anchor.data('course-id');

                ENEXT.getCourseData(courseID).done(function(courseData) {
                    renderButtons(courseData, enrollmentData, $anchor);
                });
            });
        })
    }

    return {
        init: init
    }

})(jQuery);

ENEXT.registration.init();